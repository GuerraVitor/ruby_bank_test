version: '3.8'

services:
  db:
    image: postgres:13-alpine # Imagem oficial do PostgreSQL (versão 13, baseada em Alpine para ser menor)
    volumes:
      - postgres_data:/var/lib/postgresql/data # Volume para persistir os dados do banco
    environment:
      POSTGRES_USER: postgres # Usuário do banco
      POSTGRES_PASSWORD: password # Senha do banco (MUDE PARA ALGO SEGURO EM PRODUÇÃO!)
      POSTGRES_DB: bank_app_development # Nome do banco de dados para o ambiente de desenvolvimento
    ports:
      - "5432:5432" # Opcional: mapeia a porta do banco para o host (útil para acessar com ferramentas externas)

  web:
    build: . # Constrói a imagem a partir do Dockerfile no diretório atual
    command: >
      bash -c "
        # Espera o banco de dados estar pronto
        echo 'Aguardando o PostgreSQL...'
        until pg_isready -h db -p 5432 -U postgres; do
          sleep 1
        done
        echo 'PostgreSQL está pronto!'

        # Configura o banco de dados (cria, migra, popula com seeds)
        # Usamos RAILS_ENV=development para este demo
        bundle exec rails db:create RAILS_ENV=development || true # Cria o DB se não existir (ignora erro se já existir)
        bundle exec rails db:migrate RAILS_ENV=development
        bundle exec rails db:seed RAILS_ENV=development

        # Inicia o servidor Rails
        bundle exec rails server -b 0.0.0.0 -p 3000
      "
    volumes:
      - .:/app # Monta o diretório do projeto no container (útil para desenvolvimento)
      - bundle_cache:/usr/local/bundle # Cache para as gems
    ports:
      - "3000:3000" # Mapeia a porta 3000 do host para a porta 3000 do container web
    depends_on:
      - db # Garante que o serviço 'db' inicie antes do serviço 'web'
    environment:
      RAILS_ENV: development # Define o ambiente Rails
      # Configuração de conexão com o banco de dados usando a URL padrão
      # O nome do host 'db' corresponde ao nome do serviço do banco no docker-compose.yml
      DATABASE_URL: postgres://postgres:password@db:5432/bank_app_development

volumes:
  postgres_data: # Define o volume para persistência dos dados do PostgreSQL
  bundle_cache: # Define o volume para cache das gems